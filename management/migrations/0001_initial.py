# Generated by Django 5.1 on 2024-08-17 22:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Configurations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=30)),
                ("value", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CounterCodes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country_name", models.CharField(max_length=100)),
                ("country_code", models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Rooms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("room_number", models.PositiveSmallIntegerField(unique=True)),
                ("beds", models.PositiveSmallIntegerField()),
                ("price", models.DecimalField(decimal_places=0, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name="RoomType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number", models.CharField(max_length=10, unique=True)),
                ("address", models.CharField(max_length=300, null=True)),
                ("pincode", models.CharField(max_length=6, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "MALE"),
                            ("female", "FEMALE"),
                            ("trans", "TRANS"),
                            ("other", "OTHER"),
                        ],
                        max_length=6,
                    ),
                ),
                ("identity_card_1", models.FileField(null=True, upload_to="")),
                ("identity_card_2", models.FileField(null=True, upload_to="")),
                ("date_of_birth", models.DateField(null=True)),
                ("first_visit", models.DateTimeField(auto_now_add=True)),
                (
                    "country_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="management.countercodes",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoomsPriceChart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("price", models.DecimalField(decimal_places=0, max_digits=7)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_chart",
                        to="management.rooms",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoomStayLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("check_in", models.DateTimeField(auto_now_add=True)),
                ("check_out", models.DateTimeField(null=True)),
                ("price", models.DecimalField(decimal_places=0, max_digits=7)),
                ("extra_bed", models.PositiveSmallIntegerField(default=0)),
                (
                    "extra_per_bed_price",
                    models.DecimalField(decimal_places=0, max_digits=7),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="logs",
                        to="management.group",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="management.rooms",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="rooms",
            name="room_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rooms",
                to="management.roomtype",
            ),
        ),
        migrations.CreateModel(
            name="CustomerGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="groups",
                        to="management.customers",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customers",
                        to="management.group",
                    ),
                ),
            ],
            options={"unique_together": {("group", "customer")},},
        ),
    ]
